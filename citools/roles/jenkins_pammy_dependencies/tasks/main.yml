---
  - name: Install Karma
    command: "su -c \"npm install karma --save-dev\" - jenkins warn=no"

  - name: Install Karma plugins
    command: "su -c \"npm install karma-jasmine karma-chrome-launcher --save-dev\" - jenkins warn=no"

  - name: Create karma.cmd symbolic link
    command: "su -c \"cd node_modules/.bin && ln -s ../karma/bin/karma karma.cmd\" - jenkins warn=no"

  - name: Clone PAMM seed repository
    git:
      repo: http://github.com/gatblau/pamm.seed
      dest: "{{ jenkins_user_home }}/pamm.seed"
      update: yes

  - name: Install bzip2
    yum:
      name: bzip2
      state: installed

  - name: Create node_modules symbolic link in PAMM seed
    file:
      src:  "{{ jenkins_user_home }}/node_modules"
      dest: "{{ jenkins_user_home }}/pamm.seed/node_modules"
      state: link

  - name: Install dependencies
    shell: "cd {{ jenkins_user_home }}/pamm.seed && npm install"

  - name: Update webdriver
    shell: "cd {{ jenkins_user_home }}/pamm.seed && npm run webdriver-update"

  - name: Check for local SBT cache
    become: yes
    become_user: "{{ local_user }}"
    local_action: "stat path=cache/{{ sbt_cache }}"
    register: sbt_dependencies

  - name: Build PAMM seed to create SBT cache
    shell: 'su -c "cd {{ jenkins_user_home }}/pamm.seed && /usr/local/sbt/default/bin/sbt svc/assembly testsetup/assembly -Dsbt.log.noformat=true" - jenkins warn=no'
    when: sbt_dependencies.stat.exists == false

  - name: Create local SBT cache
    local_action: "shell docker cp ci-a:/home/jenkins/.ivy2 cache && cd cache && zip -r {{ sbt_cache }} .ivy2 && rm -rf .ivy2"
    when: sbt_dependencies.stat.exists == false and connection == "docker"

  - name: Remove PAMM seed repository
    file:
      path: "{{ jenkins_user_home }}/pamm.seed"
      state: absent

  - name: Set Protractor timeout
    command: 'sed -i "s/allScriptsTimeout: 11000,/allScriptsTimeout: 30000,/" /home/jenkins/node_modules/protractor/lib/configParser.js warn=no'
