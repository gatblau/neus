---
# This play installs Jenkins and build tools

### Create jenkins user
  - name: Create jenkins user
    include: jenkins_user.yml

###  Install Build Tools
  # Install JDK (JDK variables are set in group_vars/all/main.yml)
  - name: Check if Java installed
    stat: path=/usr/java/default
    register: java_exists

  - include: install_jdk.yml
    when: java_exists.stat.exists == false

  # Install Groovy
  - name: Check if Groovy installed
    stat: path=/usr/local/groovy
    register: groovy_exists

  - name: Install Groovy
    include: install_groovy.yml
    when: groovy_exists.stat.exists == false

  # Install SBT
  - name: Check if SBT installed
    stat: path=/usr/local/sbt
    register: sbt_exists

  - name: Install SBT
    include: install_sbt.yml
    when: sbt_exists.stat.exists == false

  # Install Gradle
  - name: Check if Gradle installed
    stat: path=/usr/local/gradle
    register: gradle_exists

  - name: Install Gradle
    include: install_gradle.yml
    when: gradle_exists.stat.exists == false

  # Install Maven
  - name: Check if Maven installed
    stat: path=/usr/local/maven
    register: maven_exists

  - name: Install Maven
    include: install_maven.yml
    when: maven_exists.stat.exists == false

  # Install Git
  - name: Check if Git installed
    stat: path=/bin/git
    register: git_exists

  - name: Install Git
    include: install_git.yml
    when: git_exists.stat.exists == false

  # Install NodeJS
  - name: Installing NodeJS
    include: "plays/install_rpm.yml"
    vars:
      rpm_app_name: NodeJS
      rpm_filename: "{{nodejs_rpm}}"

  # Install Bower (npm)
  - name: Installing npm
    include: "plays/install_rpm.yml"
    vars:
      rpm_app_name: npm
      rpm_filename: "{{npm_rpm}}"

  - name: Installing Bower
    command: "npm install -g bower"

  # Install Sonar Runner
  - name: Check Sonar Runner installed
    stat: path=/usr/local/sonar_runner
    register: sonarrunner_exists
    changed_when: no

  - include: install_sonar_runner.yml
    when: sonarrunner_exists.stat.exists == false

### Install Jenkins
  - name: Check Jenkins installed
    stat: path="{{jenkins_home}}"
    register: jenkins_exists

  - include: install_jenkins.yml
    vars:
      gogs_uri:      "{{ lookup('file', 'cache/{{gogs_host}}-ip.txt') }}"
      sonarqube_uri: "{{ lookup('file', 'cache/{{sonar_host}}-ip.txt') }}"
    when: jenkins_exists.stat.exists == false

### Setup Jenkins to remote connectivity
  - name: Fetch Jenkins public key and save in temporary folder
    fetch:
      src="{{jenkins_user_home}}/.ssh/id_rsa.pub"
      dest=cache/authorized_keys
      flat=yes

  - name: Jenkins publish over ssh settings
    template:
      src=jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin.xml.j2
      dest="{{jenkins_home}}/jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin.xml"
      owner="{{jenkins_user}}"
      group="{{jenkins_group}}"
    vars:
      gogs_uri: "{{ lookup('file', 'cache/ci-dit-ip.txt') }}"

