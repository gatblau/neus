---
  - name: Create group for Jenkins user
    user:
      name="{{jenkins_group}}"
      state=present

  - name: Create user for Jenkins
    user:
      name="{{jenkins_user}}"
      password="{{jenkins_password}}"
      group="{{jenkins_group}}"
      state=present

  - name: Set Jenkins user environment variables
    blockinfile:
      dest: "{{jenkins_user_home}}/.bashrc"
      insertafter: "# User specific aliases and functions"
      marker: "# {mark} Jenkins Environment Variables"
      block:  "export JAVA_HOME=/usr/java/default

export JENKINS_HOME={{jenkins_home}}

export PATH=$PATH:$JAVA_HOME/bin

"

  - name: Generate ssh keys for Jenkins
    include: generate_ssh_keys.yml

  - name: Install Jenkins rpm
    include: "plays/install_rpm.yml"
    vars:
      rpm_app_name: Jenkins
      rpm_filename: "{{ jenkins_rpm }}"

  - name: Install Plugins
    include: install_plugins.yml

  - name: Create Jenkins users
    copy:
      src=users
      dest="{{jenkins_home}}"
      owner="{{jenkins_user}}"
      group="{{jenkins_group}}"

  - name: Copy Jenkins configuration files
    copy:
      src="{{ item }}"
      dest="{{jenkins_home}}"
      owner="{{jenkins_user}}"
      group="{{jenkins_group}}"
    with_fileglob:
      - config/*.xml

  - name: Copy Jenkins configuration file
    template: 
      src=jenkins_config.xml.j2
      dest="{{jenkins_home}}/config.xml"
      owner="{{jenkins_user}}"
      group="{{jenkins_group}}"

  - name: Copy Jenkins credentials file
    template:
      src=credentials.xml.j2
      dest="{{jenkins_home}}/credentials.xml"
      owner="{{jenkins_user}}"
      group="{{jenkins_group}}"

  - debug:
      msg="COPY NEXUS CONFIGURATION HERE"

  - name: Set up Jenkins to Sonar configuration
    template: 
      src=hudson.plugins.sonar.SonarPublisher.xml.j2
      dest="{{jenkins_home}}/hudson.plugins.sonar.SonarPublisher.xml"
      owner="{{jenkins_user}}"
      group="{{jenkins_group}}"

  - name: Copying Jenkins build jobs to the host
    copy:
      src=jobs.zip
      dest=/tmp

  - name: Unzipping Jenkins build jobs
    unarchive:
      src=/tmp/jobs.zip
      dest="{{jenkins_home}}"
      owner="{{jenkins_user}}"
      group="{{jenkins_group}}"
      copy=no

  - name: Removing Jenkins jobs from the host
    file: path=/tmp/jobs.zip state=absent

  - name: Configure Smoke Test Build
    template:
      src=smoke_test_config.xml.j2
      dest="{{jenkins_home}}/jobs/smoke_test/config.xml"
      owner="{{jenkins_user}}"
      group="{{jenkins_group}}"

  - name: Jenkins service setup
    template:
      src=jenkins.j2
      dest=/etc/sysconfig/jenkins
      owner=root
      mode=600
    when: blueprint != "silicon"

  - name: Starting the Jenkins Service
    service:
      name=jenkins
      state=started
      enabled=yes
    when: blueprint != "silicon"

  - name: Start Jenkins
    shell: "su -c \"java -jar /usr/lib/jenkins/jenkins.war --prefix=/jenkins &\" - jenkins"
    when: blueprint == "silicon"
