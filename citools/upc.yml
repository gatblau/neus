#
# Copyright (c) 2016 GATBLAU - www.gatblau.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Manages the execution of roles on a docker container.
# The only part of this playbook that needs changing is the list of roles as described below.
# The name of the playbook should be updated to reflect the host name - e.g. database.yml
#
#
# Provides the containers required to deploy CI Tools
#
---
- name: Set variables for {{ blueprint }}
  include_vars:
    file: "./host_vars/blueprints/{{ blueprint }}.yml"

# Set base images for test containers here
- name: Define base image for Docker containers (not silicon)
  set_fact:
    ci_base: "gatblau.org/centos:7ds"
  when: blueprint != "silicon"

- name: Define base image for Docker containers (silicon)
  set_fact:
    ci_base: "centos:7"
  when: blueprint == "silicon"

- name: Building the base Docker image
  docker_image:
    name: "gatblau.org/centos"
    tag:  "7ds"
    path: "../../lib/images/centos7ds"
  when: blueprint != "silicon"

- name: Restart Docker daemon to delete containers
  become: yes
  service:
    name: docker
    state: restarted

- name: Delete existing Docker containers
  become: yes
  docker_container:
    name:  "{{ item }}"
    image: "{{ ci_base }}"
    state: absent
    force_kill: true
  with_items: "{{ groups['citools'] }}"

- name: Start up CI Tools Docker containers
  docker_container:
    image: "{{ ci_base }}"
    name: "{{ item.key }}"
    hostname: "{{ item.key }}"
    detach: yes
    tty: yes
    exposed_ports: "[ {{ item.value.ports }} ]"
    command: "/usr/sbin/init"
    state: started
    privileged: yes
    volumes:
      - /var/cache/yum/neus:/var/cache/yum:rw
  with_dict: "{{ containers }}"

- name: Start up PAMM DIT Docker containers
  docker_container:
    image: "{{ ci_base }}"
    name: "{{ item.name }}"
    hostname: "{{ item.name }}"
    detach: yes
    tty: yes
    exposed_ports: "[ {{ item.ports }} ]"
    command: "/usr/sbin/init"
    state: started
    privileged: yes
    volumes:
      - /var/cache/yum/neus:/var/cache/yum:rw
  with_items:
    - { name: "ci-dit-pamm", ports: "{{ pamm_app_port }}, {{ pamm_test_port }}" }
  when: pamm == "yes" and blueprint != "silicon"

- name: Start up JAMM DIT Docker container
  docker_container:
    image: "{{ ci_base }}"
    name: "{{ item.name }}"
    hostname: "{{ item.name }}"
    detach: yes
    tty: yes
    exposed_ports: "[ {{ item.ports }} ]"
    command: "/usr/sbin/init"
    state: started
    privileged: yes
    volumes:
      - /var/cache/yum/neus:/var/cache/yum:rw
  with_items:
    - { name: "ci-dit-jamm", ports: "{{ jamm_app_port }}" }
  when: jamm == "yes" and blueprint != "silicon"

# TODO rationalise blueprint variables
- name: Set parameters for basic blueprint
  include: upc/upc_basic.yml
  when: blueprint == "basic"

- name: Set parameters for bronze blueprint
  include: upc/upc_bronze.yml
  when: blueprint == "bronze"

- name: Set parameters for silver blueprint
  include: upc/upc_silver.yml
  when: blueprint == "silver"

- name: Set parameters for gold blueprint
  include: upc/upc_gold.yml
  when: blueprint == "gold"

- name: Set parameters for silicon blueprint
  include: upc/upc_silicon.yml
  when: blueprint == "silicon"

- set_fact:
    become:     "no"
    connection: "docker"
