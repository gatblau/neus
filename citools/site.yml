#
# Copyright (c) 2019 GATBLAU - www.gatblau.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Manages the execution of roles on a docker container.
# The only part of this playbook that needs changing is the list of roles as described below.
# The name of the playbook should be updated to reflect the host name - e.g. database.yml
#
#
# The playbook to deploy the Continuous Integrations Tools
#
---
- name: Initialise Managed Hosts
  hosts: local
  connection: local
  become: no
  roles:
    - up_host
  tags: always

- name: Install baseline requirements
  hosts: citools
  connection: "{{ connection }}"
  become: "{{ become }}"
  roles:
    - baseline
  tags: always

- name: Provisioning build server (Jenkins)
  hosts: build-master
  connection: "{{ connection }}"
  become: "{{ become }}"
  roles:
    - jdk
    - jenkins_user
    - jenkins_install
    - jenkins_master
  tags: [ build, always ]

- name: Provisioning build server (build tools and PAMM seed)
  hosts: build-master
  connection: "{{ connection }}"
  become: "{{ become }}"
  roles:
    - jenkins_build_tools
    - { role: jenkins_browsers, when: pamm == "yes" }
    - { role: jenkins_pammy_dependencies, when: pamm == "yes" }
    - { role: jenkins_pammy_pipeline, when: pamm == "yes" }
  tags: [ build, basic, bronze, silver, gold ]

- name: Provisioning PAMM build server slave(s)
  hosts: build-slaves-pamm
  connection: "{{ connection }}"
  become: "{{ become }}"
  roles:
    - baseline
    - jdk
    - jenkins_user
    - jenkins_copy_ssh_key
    - jenkins_configure_slave
    - jenkins_build_tools
    - { role: jenkins_browsers, when: pamm == "yes" }
    - { role: jenkins_pammy_dependencies, when: pamm == "yes" }
  tags: [ pamm, pamm-slaves, silver, gold ]

- name: Provisioning JAMM build server slave(s)
  hosts: build-slaves-jamm
  connection: "{{ connection }}"
  become: "{{ become }}"
  roles:
    - baseline
    - jdk
    - jenkins_user
    - jenkins_copy_ssh_key
    - jenkins_configure_slave
    - jenkins_build_tools
#    - { role: jamm, when: jamm == "yes" }
  tags: [ jamm, jamm-slaves, silver, gold ]

- name: Provisioning artefact repository server
  hosts: repo
  connection: "{{ connection }}"
  become: "{{ become }}"
  roles:
    - jdk
    - nexus_install
    - nexus
  tags: [ repo, always ]

- name: Provisioning database for source and quality servers
  hosts: database
  connection: "{{ connection }}"
  become: "{{ become }}"
  roles:
    - mariadb_install
    - mariadb
  tags: [ database, always ]

- name: Provisioning quality server
  hosts: quality
  connection: "{{ connection }}"
  become: "{{ become }}"
  roles:
    - sonar_install
    - sonar
  tags: [ quality, always ]

- name: Provisioning chat server
  hosts: chat
  connection: "{{connection}}"
  become: "{{become}}"
  roles:
    - mongodb_install
    - lets_chat
  tags: [chat, basic, bronze, silver, gold ]

- name: Provisioning PAMM DIT host
  hosts: ci-dit-pamm
  connection: "{{connection}}"
  become: "{{become}}"
  roles:
    - jenkins_user
    - jenkins_copy_ssh_key
    - { role: jdk, when: connection == 'docker' }
    - { role: mariadb_install, db_user: 'pamm', db_pwd: 'n3us', when: connection == 'docker' }
  tags: [ pamm, pamm-dit, basic, bronze, silver, gold ]

- name: Provisioning JAMM DIT host
  hosts: ci-dit-pamm
  connection: "{{connection}}"
  become: "{{become}}"
  roles:
    - jenkins_user
    - jenkins_copy_ssh_key
    - { role: jdk, when: connection == 'docker' }
  tags: [ jamm, jamm-dit, basic, bronze, silver, gold ]

# Provision last to allow applications to start up before webhook is triggered
- name: Provisioning source repository server
  hosts: source
  connection: "{{ connection }}"
  become: "{{ become }}"
  roles:
    - gogs_install
    - { role: gogs_import_pammy, when: pamm == "yes" }
  tags: [ source, always ]

- name: Provisioning host Jenkins builder (silicon blueprint)
  hosts: ci-buildtools
  connection: "{{ connection }}"
  become: "{{ become }}"
  roles:
    - jenkins_user
    - jenkins_browsers
    - jenkins_build_tools
    - jenkins_ose_pammy_builder
  tags: [ silicon ]

- name: Create Docker images (silicon blueprint)
  hosts: localhost
  connection: local
  become: no
  tasks:
    - name: Create Docker images
      include_role:
        name: "docker_containers"
        tasks_from: "docker_image"
      vars:
        container_name: "{{ item.container }}"
        image_name: "{{ item.image }}"
      with_items:
        - { container: 'ci-jenkins',    image: 'silicon/test/ci-jenkins:{{ image_version | default("latest") }}'}
        - { container: 'ci-nexus',      image: 'silicon/test/ci-nexus:{{ image_version | default("latest") }}'}
        - { container: 'ci-mariadb',    image: 'silicon/test/ci-mariadb:{{ image_version | default("latest") }}'}
        - { container: 'ci-gogs',       image: 'silicon/test/ci-gogs:{{ image_version | default("latest") }}'}
        - { container: 'ci-sonar',      image: 'silicon/test/ci-sonar:{{ image_version | default("latest") }}'}
        - { container: 'ci-buildtools', image: 'silicon/test/ci-build-tools:{{ image_version | default("latest") }}'}
  tags: [ silicon ]
...