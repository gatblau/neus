---
- name: Installing the Unzip command
  include: plays/install_rpm.yml
  vars:
    rpm_app_name: "Unzip command"
    rpm_filename : "{{ unzip_rpm }}"

- name: Installing the MariaDB YUM repository file
  copy:
    src=mariadb.repo
    dest=/etc/yum.repos.d/mariadb.repo

- name: Create user for MariaDB
  user:
    name={{ mariadb_user }}
    password={{ mariadb_password }}
    state=present

- name: Open database port {{database_port}} in firewall
  include: plays/open_port.yml
  vars:
    - port_number: "{{database_port}}"
  when: connection == "ssh"

- name: Installing MariaDB
  yum:
    name={{item}}
    state=present
  with_items:
    - MariaDB-server
    - MySQL-python

- name: Setting MariaDB port number to {{database_port}}
  template: src=server.cnf.j2
            dest=/etc/my.cnf.d/server.cnf
            owner={{mariadb_user}}

- name: Starting the MariaDB Server
  service:
    name=mysql
    state=started
    enabled=yes
  when: blueprint != "silicon"

- name: Copy entrypoint script for MariaDB Docker container
  copy:
    src=entrypoint.sh
    dest=/entrypoint.sh
    mode=0755
  when: blueprint == "silicon"

- name: Change MariaDB home folder permissions
  file:
    name="/var/lib/mysql"
    recurse="yes"
    mode="0777"
  when: blueprint == "silicon"

- name: Start MariaDB
  shell: "/entrypoint.sh &"
  when: blueprint == "silicon"

- name: Creating account "{{db_user}}" to access the server remotely
  mysql_user:
    name={{ db_user }}
    host={{ item }}
    password={{ db_pwd }}
    priv=*.*:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP
    state=present
  with_items:
    - "localhost"
    - "%"

- name: Removing the Anonymous account
  mysql_user:
    name=""
    host={{ item }}
    state=absent
  with_items:
   - "{{ ansible_hostname }}"
   - 127.0.0.1
   - ::1
   - localhost

- name: Updating MariaDB root password for all root accounts
  mysql_user:
    name=root
    host={{ item }}
    password={{ db_root_pwd }}
  with_items:
   - "{{ ansible_hostname }}"
   - 127.0.0.1
   - ::1
   - localhost

- name: Deleting the Test Database
  mysql_db:
    name=test
    state=absent
    login_password={{ db_root_pwd }}